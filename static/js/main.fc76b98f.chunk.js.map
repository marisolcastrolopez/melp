{"version":3,"sources":["components/CurrentLocationMap.jsx","components/MarkerMap.jsx","components/Cards.jsx","components/Search.jsx","components/Main.jsx","components/Login.jsx","Router.js","App.js","serviceWorker.js","index.js"],"names":["mapStyles","position","width","height","CurrentLocation","_React$Component","props","_this","Object","classCallCheck","this","_this$props$initialCe","possibleConstructorReturn","getPrototypeOf","call","initialCenter","lat","lng","state","currentLocation","inherits","createClass","key","value","_this2","centerAroundCurrentLocation","navigator","geolocation","getCurrentPosition","pos","coords","setState","latitude","longitude","loadMap","prevProps","prevState","google","recenterMap","maps","mapRef","refs","map","node","ReactDOM","findDOMNode","zoom","_this$state$currentLo","center","LatLng","mapConfig","assign","Map","current","panTo","_this3","children","React","Children","c","cloneElement","mapCenter","style","react_default","a","createElement","ref","renderChildren","Component","defaultProps","visible","MapContainer","_Component","onMarkerClick","marker","e","selectedPlace","activeMarker","showingInfoWindow","onClose","Array","isArray","data","restaurants","i","index","dist","onClick","name","address","location","info","shortDescription","category","price","avgPrice","CurrentLocationMap","GoogleApiWrapper","apiKey","Cards","mdbreact_esm","item","className","size","xs","src","image","alt","concat","street","display","fontSize","class","rating","Search","handleChange","event","target","eventSearch","places","type","placeholder","searchQuery","onChange","Main","switchToMap","isMap","switchToCards","handlerSearch","text","bind","assertThisInitialized","collapse","order","arguments","length","undefined","b","hasOwnProperty","varA","toUpperCase","varB","comparison","fetch","then","response","json","console","log","view","bgPink","backgroundColor","paddingTop","sortedPlaces","filter","RegExp","exec","JSON","stringify","sort","compareValues","MarkerMap","components_Cards","react_router_dom","dark","expand","scrolling","fixed","components_Search","marginTop","isOpen","navbar","left","active","to","href","icon","Login","md","label","group","validate","error","success","AppRouter","react_router","exact","path","component","App","Router","Boolean","window","hostname","match","render","src_App","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.fc76b98f.chunk.js","sourcesContent":["import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nconst mapStyles = {\r\n  map: {\r\n    position: \"absolute\",\r\n    width: \"100%\",\r\n    height: \"100%\"\r\n  }\r\n};\r\n\r\nexport class CurrentLocation extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const { lat, lng } = this.props.initialCenter;\r\n    this.state = {\r\n      currentLocation: {\r\n        lat: lat,\r\n        lng: lng\r\n      }\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    if (this.props.centerAroundCurrentLocation) {\r\n      if (navigator && navigator.geolocation) {\r\n        navigator.geolocation.getCurrentPosition(pos => {\r\n          const coords = pos.coords;\r\n          this.setState({\r\n            currentLocation: {\r\n              lat: coords.latitude,\r\n              lng: coords.longitude\r\n            }\r\n          });\r\n        });\r\n      }\r\n    }\r\n    this.loadMap();\r\n  }\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevProps.google !== this.props.google) {\r\n      this.loadMap();\r\n    }\r\n    if (prevState.currentLocation !== this.state.currentLocation) {\r\n      this.recenterMap();\r\n    }\r\n  }\r\n  loadMap() {\r\n    if (this.props && this.props.google) {\r\n      // checks if google is available\r\n      const { google } = this.props;\r\n      const maps = google.maps;\r\n      const mapRef = this.refs.map;\r\n      // reference to the actual DOM element\r\n      const node = ReactDOM.findDOMNode(mapRef);\r\n      let { zoom } = this.props;\r\n      const { lat, lng } = this.state.currentLocation;\r\n      const center = new maps.LatLng(lat, lng);\r\n      const mapConfig = Object.assign(\r\n        {},\r\n        {\r\n          center: center,\r\n          zoom: zoom\r\n        }\r\n      );\r\n      // maps.Map() is constructor that instantiates the map\r\n      this.map = new maps.Map(node, mapConfig);\r\n    }\r\n  }\r\n  recenterMap() {\r\n    const map = this.map;\r\n    const current = this.state.currentLocation;\r\n    const google = this.props.google;\r\n    const maps = google.maps;\r\n    if (map) {\r\n      let center = new maps.LatLng(current.lat, current.lng);\r\n      map.panTo(center);\r\n    }\r\n  }\r\n  renderChildren() {\r\n    const { children } = this.props;\r\n    if (!children) return;\r\n    return React.Children.map(children, c => {\r\n      if (!c) return;\r\n      return React.cloneElement(c, {\r\n        map: this.map,\r\n        google: this.props.google,\r\n        mapCenter: this.state.currentLocation\r\n      });\r\n    });\r\n  }\r\n  render() {\r\n    const style = Object.assign({}, mapStyles.map);\r\n    return (\r\n      <div>\r\n        <div style={style} ref=\"map\">\r\n          Loading map...\r\n        </div>\r\n        {this.renderChildren()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default CurrentLocation;\r\n\r\nCurrentLocation.defaultProps = {\r\n  zoom: 17,\r\n  initialCenter: {\r\n    lat: 20.6736,\r\n    lng: -103.344\r\n  },\r\n  centerAroundCurrentLocation: false,\r\n  visible: true\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { Map, GoogleApiWrapper, InfoWindow, Marker } from \"google-maps-react\";\r\nimport CurrentLocation from \"./CurrentLocationMap\";\r\n \r\nconst mapStyles = {\r\n  width: \"100%\",\r\n  height: \"100%\"\r\n};\r\n\r\nexport class MapContainer extends Component {\r\n  constructor(props){\r\n    super(props);\r\n      this.state = {\r\n        showingInfoWindow: false, //Hides or the shows the infoWindow\r\n        activeMarker: {}, //Shows the active marker upon click\r\n        selectedPlace: {} //Shows the infoWindow to the selected place upon a marker\r\n    }\r\n  }\r\n  \r\n\r\n  onMarkerClick = (props, marker, e) =>\r\n    this.setState({\r\n      selectedPlace: props,\r\n      activeMarker: marker,\r\n      showingInfoWindow: true\r\n    });\r\n  onClose = props => {\r\n    if (this.state.showingInfoWindow) {\r\n      this.setState({\r\n        showingInfoWindow: false,\r\n        activeMarker: null\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    \r\n    const data = (Array.isArray(this.props.data))? this.props.data : this.props.data.restaurants;\r\n    const marker = data.map((i, index) => {\r\n      return (\r\n        <Marker\r\n        onClick={this.onMarkerClick}\r\n        name={i.name}\r\n        position={{ lat: i.address.location.lat, lng: i.address.location.lng }}\r\n        key={index}\r\n        info= {i.shortDescription}\r\n        category = {i.category}\r\n        price = { i.avgPrice}\r\n      />\r\n      )\r\n    });\r\n\r\n    return (\r\n      <CurrentLocation centerAroundCurrentLocation google={this.props.google}> \r\n        {marker}\r\n        <InfoWindow\r\n          marker={this.state.activeMarker}\r\n          visible={this.state.showingInfoWindow}\r\n          onClose={this.onClose}\r\n        >\r\n          <div>\r\n            <h4>{this.state.selectedPlace.name}</h4>\r\n            <p>{this.state.selectedPlace.info}</p>\r\n            <p>{this.state.selectedPlace.category}</p>\r\n            <p>${this.state.selectedPlace.price}</p>\r\n          </div> \r\n        </InfoWindow>\r\n      </CurrentLocation>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GoogleApiWrapper({\r\n  apiKey: \"AIzaSyBrKMm2g8gMfsU_JtKF6fkgdtw1ED3ShgU\"\r\n})(MapContainer);\r\n","import React, { Component } from 'react';\r\nimport '../style/card.css';\r\nimport { MDBContainer, MDBRow, MDBCol } from 'mdbreact';\r\n\r\nclass Cards extends Component {\r\n  render() {\r\n    const data = (Array.isArray(this.props.data))? this.props.data : this.props.data.restaurants;\r\n    return (\r\n      <div>\r\n        <MDBContainer>\r\n          {data.map((item, index) => (\r\n            <div key={index}>\r\n              <MDBRow className=\"cardstyle\">\r\n                <MDBCol size=\"4\" xs=\"4\">\r\n                  <div>\r\n                    <img\r\n                      src={item.image}\r\n                      alt=\"icon-btn\"\r\n                      style={{ height: `${6}rem`, width: `${6}rem` }}\r\n                    />\r\n                  </div>\r\n                </MDBCol>\r\n                <MDBCol size=\"6\" xs=\"6\">\r\n                  <h6>{item.name}</h6>\r\n                  <p>{item.shortDescription}</p>\r\n                  <p>{item.address.street}</p>\r\n                </MDBCol>\r\n                <MDBCol size=\"2\" xs=\"2\">\r\n                  <span><i style={{display: \"block\", fontSize: 10}} class=\"fas fa-star\"></i> {item.rating}</span> <br />\r\n                  <span>${item.avgPrice}</span>\r\n                </MDBCol>\r\n              </MDBRow>\r\n            </div>\r\n          ))}\r\n        </MDBContainer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Cards;\r\n","import React, { Component } from \"react\";\r\nimport \"../style/main.css\";\r\n\r\nclass Search extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      places: []\r\n    };\r\n  }\r\n\r\n  handleChange = event => {\r\n    const value = event.target.value;\r\n\r\n    this.props.eventSearch(value);\r\n  };\r\n\r\n  render() {\r\n    //console.log(this.state.dataFiltered);\r\n    return (\r\n      <div className=\"searchinput\">\r\n        <input\r\n          className=\"searchinput\"\r\n          type=\"text\"\r\n          placeholder=\"Search..\"\r\n          value={this.props.searchQuery}\r\n          onChange={this.handleChange}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Search;\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  MDBIcon,\r\n  MDBContainer,\r\n  MDBNavbar,\r\n  MDBNavbarNav,\r\n  MDBNavbarToggler,\r\n  MDBCollapse,\r\n  MDBNavItem,\r\n  MDBNavLink,\r\n  MDBRow,\r\n  MDBCol\r\n} from \"mdbreact\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\nimport MarkerMap from \"./MarkerMap\";\r\nimport Cards from \"./Cards\";\r\nimport Search from \"./Search\";\r\nimport \"../style/main.css\";\r\n\r\nclass Main extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.switchToCards = this.switchToCards.bind(this);\r\n    this.switchToMap = this.switchToMap.bind(this);\r\n    this.state = {\r\n      isMap: false,\r\n      collapse: false,\r\n      searchQuery: \"\",\r\n      places: []\r\n    };\r\n    this.onClick = this.onClick.bind(this);\r\n  }\r\n  onClick() {\r\n    this.setState({\r\n      collapse: !this.state.collapse\r\n    });\r\n  }\r\n\r\n  switchToMap = () => {\r\n    this.setState({ isMap: true });\r\n  };\r\n\r\n  switchToCards = () => {\r\n    this.setState({ isMap: false });\r\n  };\r\n\r\n  handlerSearch = text => {\r\n    this.setState({ searchQuery: text });\r\n  };\r\n\r\n  // function for dynamic sorting\r\n  compareValues(key, order = \"asc\") {\r\n    return function(a, b) {\r\n      if (!a.hasOwnProperty(key) || !b.hasOwnProperty(key)) {\r\n        // property doesn't exist on either object\r\n        return 0;\r\n      }\r\n\r\n      const varA = typeof a[key] === \"string\" ? a[key].toUpperCase() : a[key];\r\n      const varB = typeof b[key] === \"string\" ? b[key].toUpperCase() : b[key];\r\n\r\n      let comparison = 0;\r\n      if (varA > varB) {\r\n        comparison = 1;\r\n      } else if (varA < varB) {\r\n        comparison = -1;\r\n      }\r\n      return order == \"desc\" ? comparison * -1 : comparison;\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch(\"https://melp-backend.herokuapp.com/places\")\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        this.setState(\r\n          {\r\n            places: data.places\r\n          },\r\n          () => console.log(\"places\", this.state.places)\r\n        );\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const bgPink = { backgroundColor: \"#292929\", paddingTop: `${1}rem` };\r\n    const isMap = this.state.isMap;\r\n    let view;\r\n    const filteredPlaces = this.state.places.filter(i =>\r\n      new RegExp(this.state.searchQuery, \"i\").exec(JSON.stringify(i))\r\n    );\r\n\r\n    const sortedPlaces = filteredPlaces.sort(\r\n      this.compareValues(\"rating\", \"desc\")\r\n    );\r\n    if (isMap) {\r\n      console.log(sortedPlaces);\r\n      view = <MarkerMap data={sortedPlaces} />;\r\n    } else {\r\n      console.log(sortedPlaces);\r\n      view = <Cards data={sortedPlaces} />;\r\n    }\r\n    return (\r\n      <div>\r\n        <header>\r\n          <div>\r\n            <Router>\r\n              <header>\r\n                <MDBNavbar\r\n                  style={bgPink}\r\n                  dark\r\n                  expand=\"md\"\r\n                  scrolling\r\n                  fixed=\"top\"\r\n                >\r\n                  {/* <MDBNavbarBrand href=\"/\">\r\n                    <p>Brand</p>\r\n                  </MDBNavbarBrand> */}\r\n                  <Search\r\n                    className=\"searchinput\"\r\n                    style={{ marginTop: `${2.5}rem` }}\r\n                    searchQuery={this.state.searchQuery}\r\n                    eventSearch={this.handlerSearch}\r\n                  />\r\n                  <MDBNavbarToggler onClick={this.onClick} />\r\n                  <MDBCollapse isOpen={this.state.collapse} navbar>\r\n                    <MDBNavbarNav left>\r\n                      <MDBNavItem active>\r\n                        <MDBNavLink to=\"#\">Home</MDBNavLink>\r\n                      </MDBNavItem>\r\n                      <MDBNavItem>\r\n                        <MDBNavLink to=\"#\">Saved</MDBNavLink>\r\n                      </MDBNavItem>\r\n                      <MDBNavItem>\r\n                        <MDBNavLink to=\"#\">Add</MDBNavLink>\r\n                      </MDBNavItem>\r\n                    </MDBNavbarNav>\r\n                  </MDBCollapse>\r\n                </MDBNavbar>\r\n              </header>\r\n            </Router>\r\n          </div>\r\n        </header>\r\n        <div style={{ paddingTop: 80 }}>\r\n          <button className=\"btnswitch\" onClick={this.switchToCards}>Cards </button>\r\n          <button className=\"btnswitch\" onClick={this.switchToMap}>Map</button>\r\n        </div>\r\n        <section>{view}</section>\r\n        <footer>\r\n          <div />\r\n          <MDBContainer className=\"navbarbottom\">\r\n            <MDBRow>\r\n              <MDBCol>\r\n                <a href=\"#home\" className=\"active\">\r\n                  Home{\" \"}\r\n                  <MDBIcon\r\n                    style={{ display: \"block\", marginTop: `${0.2}rem` }}\r\n                    icon=\"home\"\r\n                    size=\"2x\"\r\n                  />\r\n                </a>\r\n              </MDBCol>\r\n              <MDBCol>\r\n                {\" \"}\r\n                <a href=\"#news\">\r\n                  Add Place{\" \"}\r\n                  <MDBIcon\r\n                    style={{ display: \"block\", marginTop: `${0.2}rem` }}\r\n                    icon=\"plus-circle\"\r\n                    size=\"2x\"\r\n                  />\r\n                </a>\r\n              </MDBCol>\r\n              <MDBCol>\r\n                <a href=\"#contact\">\r\n                  Saved{\" \"}\r\n                  <MDBIcon\r\n                    style={{ display: \"block\", marginTop: `${0.2}rem` }}\r\n                    icon=\"bookmark\"\r\n                    size=\"2x\"\r\n                  />\r\n                </a>\r\n              </MDBCol>\r\n            </MDBRow>\r\n          </MDBContainer>\r\n        </footer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Main;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { MDBContainer, MDBRow, MDBCol, MDBInput, MDBBtn } from \"mdbreact\";\r\nimport '../style/login.css'\r\n\r\nconst Login = () => {\r\n  return (\r\n    <MDBContainer>\r\n      <MDBRow>\r\n        <MDBCol md=\"6\">\r\n          <form className=\"form-padding\">\r\n            <p className=\"h5 text-center mb-4\">Sign in</p>\r\n            <div className=\"grey-text\">\r\n              <MDBInput\r\n                label=\"Type your email\"\r\n                // icon=\"envelope\"\r\n                group\r\n                type=\"email\"\r\n                validate\r\n                error=\"wrong\"\r\n                success=\"right\"\r\n              />\r\n              <MDBInput\r\n                label=\"Type your password\"\r\n                // icon=\"lock\"\r\n                group\r\n                type=\"password\"\r\n                validate\r\n              />\r\n            </div>\r\n            <div className=\"text-center btn-login\">\r\n              <Link className=\"link-login\" to=\"/app\">\r\n                Login\r\n              </Link>\r\n            </div>\r\n          </form>\r\n        </MDBCol>\r\n      </MDBRow>\r\n    </MDBContainer>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport Main from \"./components/Main\";\r\nimport Login from \"./components/Login\";\r\n\r\nconst AppRouter = () => {\r\n  return (\r\n    <main>\r\n      <Switch>\r\n        <Route exact path=\"/\" component={Login} />\r\n        <Route path=\"/app\" component={Main} />\r\n      </Switch>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default AppRouter;\r\n","\r\n import React from 'react';\r\n import Main from './components/Main';\r\n import Router from './Router'\r\n\r\nfunction App() {\r\n return (\r\n   <div className=\"App\">\r\n     \r\n       <Router></Router>\r\n     \r\n   </div>\r\n );\r\n} \r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import '@fortawesome/fontawesome-free/css/all.min.css';\r\nimport 'bootstrap-css-only/css/bootstrap.min.css';\r\nimport 'mdbreact/dist/css/mdb.css';\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { HashRouter } from 'react-router-dom'\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n  <HashRouter>\r\n    <App />\r\n  </HashRouter>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}